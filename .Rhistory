ifONE <- c(1:3,6,8,11:14,16,21,24:25,27,29:31,33:34,36:39)
ifTWO <- setdiff(1:40, ifONE)
ifTWO # this looks right. eyes still glazing over.
head(cbind(NARC.df[ifTWO]-1, NARC.df[ifTWO])) # checking my confusing logic to see the changes that I made.
head(cbind(NARC.df[ifONE], 2-NARC.df[ifONE]))
reNARC.df <- data.frame(2-NARC.df[ifONE], NARC.df[ifTWO]-1) # combining my work into one data.frame
head(reNARC.df)
head(reNARC.df)[1:5]
head(reNARC.df)[]
head(reNARC.df)
head(reNARC.df)
psych::alpha(reNARC.df)[1:5] # psych comes before alpha() so R doesn't get confused and try to use the ggplot2 alpha() function, which is about colors.
psych::alpha(reNARC.df)[2]
psych::alpha(reNARC.df)[1:5,2]
psych::alpha(reNARC.df)[2] # psych comes before alpha() so R doesn't get confused and try to use the ggplot2 alpha() function, which is about colors.
psych::alpha(reNARC.df)[1]
d <- read.csv("~/Dropbox/!GRADSTATS/Datasets/World Happiness Report - 2024/World-happiness-report-2024.csv", stringsAsFactors = T)
names(d)
hist(d$Social.support)
max(d$Social.support)
max(d$Social.support, na.rm = T)
max(d$Social.support, na.rm = T) - mean(d$Social.support, na.rm = T)
max(d$Social.support, na.rm = T) - mean(d$Social.support, na.rm = T)/sd(d$Social.support, na.rm = T)
(max(d$Social.support, na.rm = T) - mean(d$Social.support, na.rm = T))/sd(d$Social.support, na.rm = T)
names(mini)
mini <- read.csv("../Class Datasets/101 - Class Datasets - FA25/mini_cal_data.csv", stringsAsFactors = T, na.strings = "")
head(mini)
nrow(mini)
names(mini)
mini <- read.csv("../Class Datasets/101 - Class Datasets - FA25/mini_cal_data.csv", stringsAsFactors = T, na.strings = "")
head(mini) # it loaded.
head(mini)
head(mini)[,1:5]
d <- read.csv("../Class Datasets/101 - Class Datasets - FA25/interruption_FA25.csv", stringsAsFactors = T)
head(d)[,1:4] # just looking at first four columns so as not to overwhelm this document
nrow(d)
names(d)
hist(mini$insta.followers) # hmm.... an outlier. I'll need to remove.
hist(mini$insta.followers)
mini <- read.csv("../Class Datasets/101 - Class Datasets - FA25/mini_cal_data.csv", stringsAsFactors = T)
head(mini)[,1:5] # it loaded. Just looking at the first four columns so as not to overwhelm this document.
hist(mini$insta.followers) # hmm.... an outlier. I'll need to remove.
mini$insta.followers[mini$insta.followers > 5000] # a more general rule?
mini$insta.followers[mini$insta.followers > 5000] # a more general rule?
mini$insta.followers[mini$insta.followers > 5000] <- NA
mean(mini$insta.followers, na.rm = T)
median(mini$insta.followers, na.rm = T)
sd(mini$insta.followers, na.rm = T)
range(mini$insta.followers, na.rm = T)
hist(mini$insta.followers) # looks better
mean(mini$insta.followers, na.rm = T)
median(mini$insta.followers, na.rm = T)
sd(mini$insta.followers, na.rm = T)
range(mini$insta.followers, na.rm = T)
hist(mini$insta.followers, col = 'black', bor = 'white',
main = "Histogram of Insta Followers",
xlab = "Number of Followers on Instagram (Self-Reported)")
abline(v = mean(mini$insta.followers, na.rm = T), col = 'red', lwd = 5)
abline(v = median(mini$insta.followers, na.rm = T), col = 'blue', lwd = 5)
abline(v = mean(mini$insta.followers, na.rm = T) +
sd(mini$insta.followers, na.rm = T), col = 'red', lty = 2)
hist(mini$insta.followers, col = 'black', bor = 'white',
main = "Histogram of Insta Followers",
xlab = "Number of Followers on Instagram (Self-Reported)")
abline(v = mean(mini$insta.followers, na.rm = T), col = 'red', lwd = 5)
abline(v = median(mini$insta.followers, na.rm = T), col = 'blue', lwd = 5)
abline(v = mean(mini$insta.followers, na.rm = T) +
sd(mini$insta.followers, na.rm = T), col = 'red', lty = 2)
abline(v = mean(mini$insta.followers, na.rm = T) -
sd(mini$insta.followers, na.rm = T), col = 'red', lty = 2)
hist(d$Social.support)
d <- read.csv("~/Dropbox/!GRADSTATS/Datasets/World Happiness Report - 2024/World-happiness-report-2024.csv", stringsAsFactors = T)
names(d)
hist(d$Social.support)
names(d)
d$upperwhisker - d$lowerwhisker
hist(d$upperwhisker - d$lowerwhisker)
min(d$upperwhisker - d$lowerwhisker)
mod <- lm(Ladder.score ~ Social.support, data = d)
plot(Ladder.score ~ Social.support, data = d)
abline(mod, lwd = 5, col = 'yellow')
d[min(d$upperwhisker - d$lowerwhisker), d$Country.name]
d$upperwhisker - d$lowerwhisker)
d[min(d$upperwhisker - d$lowerwhisker, d$Country.name]
d[min((d$upperwhisker - d$lowerwhisker), d$Country.name]
d$whiskerdiff <- d$upperwhisker - d$lowerwhisker
d[d$whiskerdiff == min(d$whiskerdiff), d$Country.name]
d$whiskerdiff == min(d$whiskerdiff)
d[(d$whiskerdiff == min(d$whiskerdiff)), d$Country.name]
d[(d$whiskerdiff == min(d$whiskerdiff))]
d$whiskerdiff == min(d$whiskerdiff)
d[d$whiskerdiff == min(d$whiskerdiff)]
d[d$whiskerdiff == min(d$whiskerdiff),]
d[d$whiskerdiff == max(d$whiskerdiff),]
names(d)
d[d$whiskerdiff,1]
d[sort(d$whiskerdiff),1]
sort(d$whiskerdiff)
d[d$wiskerdiff == sort(d$whiskerdiff),1]
d$wiskerdiff == sort(d$whiskerdiff)
d$whiskerdiff == sort(d$whiskerdiff)
d[c(d$whiskerdiff == sort(d$whiskerdiff)),1]
d[order(d$whiskerdiff), 1]
order(d$whiskerdiff)
d$whiskerdiff
d$upperwhisker
d$lowerwhisker
d$upperwhisker - d$lowerwhisker
nrow(d)
mod <- lm(Ladder.score ~ Social.support, data = d)
coef(mod)
coef(mod)[1] + coef(mod)[2]*1
coef(mod)[1] + coef(mod)[2]*.25
plot(d$Ladder.score, main = "Mean of Y as Source of Predictions")
abline(h = mean(d$Ladder.score), lwd = 5)
plot(d$Ladder.score ~ d$Social.support,
main = "Mean of Y as Source of Predictions",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
par(mfrow = c(1,2))
plot(d$Ladder.score,
main = "Mean of Y as Source of Predictions",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
plot(d$Ladder.score ~ d$Social.support,
main = "Mean of Y as Source of Predictions",
ylab = "Happiness Scores")
mod <- lm(Ladder.score ~ Social.support, data = d)
abline(mod, lwd = 5, col = 'yellow')
plot(d$Ladder.score,
main = "Predicting Happiness from Mean",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
plot(d$Ladder.score ~ d$Social.support,
main = "Predicting Happiness form Social Support",
ylab = "Happiness Scores",
xlab = "Social Support Score")
par(mfrow = c(1,2))
plot(d$Ladder.score,
main = "Predicting Happiness from Mean",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
plot(d$Ladder.score ~ d$Social.support,
main = "Predicting Happiness form Social Support",
ylab = "Happiness Scores",
xlab = "Social Support Score")
mod <- lm(Ladder.score ~ Social.support, data = d)
abline(mod, lwd = 5, col = 'yellow')
d[sample(d, nrow(d)), ]
d[sample(1:nrow(d), nrow(d)), ]
d[sample(1:nrow(d), nrow(d)), ]
d[sample(1:nrow(d), nrow(d)), ]
d[sample(1:nrow(d), nrow(d)), ]
plot(d[sample(1:nrow(d), nrow(d)), ]$Ladder.score,
main = "Predicting Happiness from Mean",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
d[sample(1:nrow(d), nrow(d)), ]
plot(d[sample(1:nrow(d), nrow(d)), ]$Ladder.score,
main = "Predicting Happiness from Mean",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
d <- read.csv("~/Dropbox/!GRADSTATS/Datasets/World Happiness Report - 2024/World-happiness-report-2024.csv", stringsAsFactors = T)
par(mfrow = c(1,2))
plot(d[sample(1:nrow(d), nrow(d)), ]$Ladder.score,
main = "Predicting Happiness from Mean",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
plot(d$Ladder.score ~ d$Social.support,
main = "Predicting Happiness form Social Support",
ylab = "Happiness Scores",
xlab = "Social Support Score")
mod <- lm(Ladder.score ~ Social.support, data = d)
abline(mod, lwd = 5, col = 'yellow')
par(mfrow = c(1,2))
plot(d[sample(1:nrow(d), nrow(d)), ]$Ladder.score,
main = "Predicting Happiness \nfrom theMean",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
plot(d$Ladder.score ~ d$Social.support,
main = "Predicting Happiness \nfrom Social Support",
ylab = "Happiness Scores",
xlab = "Social Support Score")
par(mfrow = c(1,2))
plot(d$Ladder.score ~ d$Social.support,
main = "Predicting Happiness \nfrom Social Support",
ylab = "Happiness Scores",
xlab = "Social Support Score")
mod <- lm(Ladder.score ~ Social.support, data = d)
abline(mod, lwd = 5, col = 'yellow')
plot(scale(d$Ladder.score) ~ scale(d$Social.support),
main = "Predicting Happiness \nfrom Social Support",
ylab = "Happiness Scores (Z-Scores)",
xlab = "Social Support Score(Z-Scores)")
modZ <- lm(scale(Ladder.score) ~ scale(Social.support), data = d)
abline(modZ, lwd = 5, col = 'gold')
table(coef(mod), coef(modZ))
cbind(coef(mod), coef(modZ))
cbind("Raw Scores" = coef(mod), "Z Scores" = coef(modZ))
par(mfrow = c(2,2))
plot(mod)
par(mfrow = c(1,1))
hist(mod$residuals)
plot(scale(d$Ladder.score) ~ scale(d$Social.support),
main = "Predicting Happiness \nfrom Social Support",
ylab = "Happiness Scores (Z-Scores)",
xlab = "Social Support Score(Z-Scores)")
modZ <- lm(scale(Ladder.score) ~ scale(Social.support), data = d)
abline(modZ, lwd = 5, col = 'gold')
plot(d$Ladder.score ~ d$Social.support,
main = "Predicting Happiness \nfrom Social Support",
ylab = "Happiness Scores",
xlab = "Social Support Score")
mod <- lm(Ladder.score ~ Social.support, data = d)
abline(mod, lwd = 5, col = 'yellow')
coef(mod)
summary(mod)$r.squared
hist(d$Social.support)
## "By Hand"
mean.resid <- d$Ladder.score - mean(d$Ladder.score)
SST <- sum(mean.resid^2)
SSE <- sum(mod$residuals^2)
SST - SSE
(SST - SSE) / SST
## VIDEO 1 : Loading and Navigating a Dataset
d <- read.csv("~/Dropbox/!WHY STATS/Chapter Datasets/World-happiness-report-2024.csv", stringsAsFactors = T)
names(d)
d <- read.csv("~/Dropbox/!WHY STATS/Class Datasets/101 - Class Datasets - FA25/mini_cal_data.csv", stringsAsFactors = T)
head(d) # checking my data.
nrow(d)
names(d)
d$stoned72
hap.df <- with(d, data.frame(satlife, selfes, is.happy))
alpha(hap.df)
psych::alpha(hap.df)
hap.df
psych::alpha(hap.df)
hap.df <- with(d, data.frame(satlife, selfes, is.happy, 6-bored))
psych::alpha(hap.df)
dd <- read.csv("~/Dropbox/!WHY STATS/Class Datasets/101 - Class Datasets - FA25/mini_cal_codebook.csv")
head(dd)
dd
dd
dd
dd
dd[c(7,10, 20, 31, 33),]
dd[c(7,10, 20, 31, 33),]
dd[c(7,10, 20, 31, 33),]
1+1
nrow(d)
summary(d$stoned72)
alpha(hap.df)
psych::alpha(hap.df)
range(hap.df)
range(hap.df, na.rm = T)
hap.df <- with(d, data.frame(satlife, selfes, is.happy, 10-bored))
range(hap.df, na.rm = T)
psych::alpha(hap.df)
d$HAPP <- rowMeans(hap.df, na.rm = T)
hist(d$HAPP)
summary(d$HPP)
summary(d$HAPP)
plot(d$insta.follows, main = "Insta Follows in "Raw" Units")
plot(d$insta.follows, main = "Insta Follows in 'Raw' Units")
plot(scale(d$insta.follows), main = "Insta Follows in 'Z-Score' Units")
par(mfrow = c(1,2))
plot(d$insta.follows, main = "Insta Follows in 'Raw' Units")
plot(scale(d$insta.follows), main = "Insta Follows in 'Z-Score' Units")
d <- read.csv("~/Dropbox/!WHY STATS/Class Datasets/214 - Class Datasets - FA25/Mini Dataset/mini_dvc_data.csv", stringsAsFactors = T)
plot(d$stoned72)
mean(d$selfes)
d <- read.csv("~/Dropbox/!GRADSTATS/Datasets/World Happiness Report - 2024/World-happiness-report-2024.csv", stringsAsFactors = T)
par(mfrow = c(1,2))
plot(d[sample(1:nrow(d), nrow(d)), ]$Ladder.score,
main = "Predicting Happiness \nfrom theMean",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
plot(d$Ladder.score ~ d$Social.support,
main = "Predicting Happiness \nfrom Social Support",
ylab = "Happiness Scores",
xlab = "Social Support Score")
mod <- lm(Ladder.score ~ Social.support, data = d)
abline(mod, lwd = 5, col = 'yellow')
d <- read.csv("~/Dropbox/!GRADSTATS/Datasets/World Happiness Report - 2024/World-happiness-report-2024.csv", stringsAsFactors = T)
par(mfrow = c(1,2))
plot(d[sample(1:nrow(d), nrow(d)), ]$Ladder.score,
main = "Predicting Happiness \nfrom theMean",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
plot(d$Ladder.score ~ d$Social.support,
main = "Predicting Happiness \nfrom Social Support",
ylab = "Happiness Scores",
xlab = "Social Support Score")
mod <- lm(Ladder.score ~ Social.support, data = d)
abline(mod, lwd = 5, col = 'yellow')
par(mfrow = c(1,2))
plot(d[sample(1:nrow(d), nrow(d)), ]$Ladder.score,
main = "Predicting Happiness \nfrom theMean",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
plot(d$Ladder.score ~ d$Social.support,
main = "Predicting Happiness \nfrom Social Support",
ylab = "Happiness Scores",
xlab = "Social Support Score")
mod <- lm(Ladder.score ~ Social.support, data = d)
abline(mod, lwd = 5, col = 'yellow')
par(mfrow = c(1,2))
plot(d[sample(1:nrow(d), nrow(d)), ]$Ladder.score,
main = "Predicting Happiness \nfrom theMean",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
plot(d$Ladder.score ~ d$Social.support,
main = "Predicting Happiness \nfrom Social Support",
ylab = "Happiness Scores",
xlab = "Social Support Score")
mod <- lm(Ladder.score ~ Social.support, data = d)
abline(mod, lwd = 5, col = 'yellow')
par(mfrow = c(1,2))
plot(d[sample(1:nrow(d), nrow(d)), ]$Ladder.score,
main = "Predicting Happiness \nfrom theMean",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
plot(d$Ladder.score ~ d$Social.support,
main = "Predicting Happiness \nfrom Social Support",
ylab = "Happiness Scores",
xlab = "Social Support Score")
mod <- lm(Ladder.score ~ Social.support, data = d)
abline(mod, lwd = 5, col = 'yellow')
par(mfrow = c(1,2))
plot(d[sample(1:nrow(d), nrow(d)), ]$Ladder.score,
main = "Predicting Happiness \nfrom the Mean",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
plot(d$Ladder.score ~ d$Social.support,
main = "Predicting Happiness \nfrom Social Support",
ylab = "Happiness Scores",
xlab = "Social Support Score")
mod <- lm(Ladder.score ~ Social.support, data = d)
abline(mod, lwd = 5, col = 'yellow')
par(mfrow = c(1,2))
plot(d[sample(1:nrow(d), nrow(d)), ]$Ladder.score,
main = "Predicting Happiness \nfrom the Mean",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
plot(d$Ladder.score ~ d$Social.support,
main = "Predicting Happiness \nfrom Social Support",
ylab = "Happiness Scores",
xlab = "Social Support Score")
mod <- lm(Ladder.score ~ Social.support, data = d)
abline(mod, lwd = 5, col = 'yellow')
par(mfrow = c(1,2))
plot(d[sample(1:nrow(d), nrow(d)), ]$Ladder.score,
main = "Predicting Happiness \nfrom the Mean",
ylab = "Happiness Scores")
abline(h = mean(d$Ladder.score), lwd = 5)
plot(d$Ladder.score ~ d$Social.support,
main = "Predicting Happiness \nfrom Social Support",
ylab = "Happiness Scores",
xlab = "Social Support Score")
mod <- lm(Ladder.score ~ Social.support, data = d)
abline(mod, lwd = 5, col = 'yellow')
mean.resid <- d$Ladder.score - mean(d$Ladder.score)
SST <- sum(mean.resid^2)
SST
model.resid <- mod$residuals
SSE <- sum(mod$residuals^2)
SSE
(SST - SSE)/SST
(SST - SSE)/SST
summary(mod)$r.squared
nrow(d)
hist(d$Ladder.score)
mean(d$Ladder.score)
min(d$Ladder.score)
min(scale(d$Ladder.score))
names(d)
hist(d$Social.support)
hist(d$Social.support)
plot(d$Ladder.score ~ d$Social.support,
main = "Predicting Happiness \nfrom Social Support",
ylab = "Happiness Scores",
xlab = "Social Support Score")
mod <- lm(Ladder.score ~ Social.support, data = d)
abline(mod, lwd = 5, col = 'yellow')
d <- read.csv("~/Dropbox/!WHY STATS/Chapter Datasets/World-happiness-report-2024.csv", stringsAsFactors = T)
d <- read.csv("~/Dropbox/!WHY STATS/Chapter Datasets/World-happiness-report-2024.csv", stringsAsFactors = T)
head(d)
hist(d$Ladder.score)
mean(d$Ladder.score)
d$Ladder.score
## finding the maximum and minimum values
min(d$Ladder.score)
range(d$Ladder.score)
summary(d$Ladder.score)
summary(d)
library(psych)
describe(d$Ladder.score)
## why the f*!@& do we care about this???!?!?!?!!?!?
d$Ladder.score[42]
## calculating the mean
mean(d$Ladder.score)
d$Ladder.score[42]
d$Ladder.score[42]
mean(d$Ladder.score)
d$Ladder.score[42] - mean(d$Ladder.score)
sd(d$Ladder.score)
hist(d$Ladder.score)
abline(v = mean(d$Ladder.score), lwd = 5)
abline(v = d$Ladder.score[42], lwd = 2, col = 'red')
abline(v = mean(d$Ladder.score) + sd(d$Ladder.score), lwd = 2, lty = "dashed") # dashed = +1SD
abline(v = mean(d$Ladder.score) - sd(d$Ladder.score), lwd = 2, lty = "dashed") # dashed = +1SD
(d$Ladder.score[42] - mean(d$Ladder.score))/sd(d$Ladder.score) # this country's happiness is .76 points higher than the mean.
scale(d$Ladder.score)[42] # z-score the one country.
scale(d$Ladder.score)[100] # z-score for country 100
scale(d$Ladder.score)[150] # z-score for country 150 =
scale(d$Ladder.score)[141] # z-score for country 150 =
hist(d$Ladder.score) # hist for one variable that is numeric
## there's a tilde ~ : this separates our DV from our IV
## there's more than one variable : we are making predictions of the variable on the left (the DV) from variable(s) on the right.
## using plot, not hist, for numeric data.
## professor is defining the data as an argument, not along with each variable.
plot(d$Ladder.score ~ d$Social.support) #
mod <- lm(d$Ladder.score ~ d$Social.support)
abline(mod, lwd = 5, col = 'yellow')
abline(mod, lwd = 5, col = 'gold')
mod
coef(mod)
coef(mod)[1] # the intercept
coef(mod)[2] # the slope
scale(d$Ladder.score)[42]
d$Ladder.score[42]
mean(d$Ladder.score)
sd(d$Ladder.score)
library(readxl)
d <- read_excel("~/Dropbox/!WHY STATS/Professor Datasets/Perceptions of Allyship/S1/Study 1a.xlsx")
library(readxl)
study1a <- read_excel("~/Dropbox/!WHY STATS/Professor Datasets/Perceptions of Allyship/S1/Study 1a.xlsx")
#labeling what is male & female#
study1a$Gender[study1a$Gender == 1] <- "male"
study1a$Gender[study1a$Gender == 2] <- "female"
Study1a$Gender<-as.numeric(study1a$Gender)
count(study1a, "Gender")
library(tidyverse)
library(rstatix)
d <- read.csv("~/Dropbox/!GRADSTATS/Datasets/Perceptions of the Wealthy/Dawtry 2015 Study 1a.csv", stringsAsFactors = T)
names(d)
head(d)
hist(d$age)
plot(d$Household_Income)
hist(d$Household_Income)
nrow(d)
REDIST.df <- with(d, data.frame(redist1, redist2, redist3, redist4))
## R Exam - FA25
library(psych)
alpha(REDIST.df)
psych::alpha(REDIST.df)
summary(d)
d <- read_excel("~/Downloads/1a processed.xlsx")
names(d)
d <- read.csv("~/Dropbox/!GRADSTATS/Datasets/Perceptions of the Wealthy/Dawtry 2015 Study 1a.csv", stringsAsFactors = T)
REDIST.df <- with(d, data.frame(redist1, redist2, redist3, redist4))
psych::alpha(REDIST.df)
names(d)
d$PS
table(d$PS)
head(d)
psych::alpha(REDIST.df)
REDIST.df <- with(d, data.frame(redist1, redist2, redist3, 7-redist4))
psych::alpha(REDIST.df)
REDIST.df <- with(d, data.frame(redist1, 7-redist2, redist3, 7-redist4))
psych::alpha(REDIST.df)
d$REDIST <- rowMeans(REDIST.df, na.rm = T)
hist(d$REDIST)
plot(REDIST ~ d$Political_Preference)
plot(d$REDIST ~ d$Political_Preference)
plot(d$REDIST ~ d$age)
abline(lm(d$REDIST ~ d$age))
dY <- d[d$age < 25,]
head(dY)
nrow(dY)
mean(dY$REDIST)
mean(dY$REDIST, na.rm = T)
dO <- d[d$age > 25,]
head(dY)
head(dN)
head(dO)
mean(dO$REDIST, na.rm = T)
dY <- d[d$age < 25,]
head(dY)
nrow(dY)
mean(dY$Political_Preference, na.rm = T)
dO <- d[d$age > 25,]
head(dO)
mean(dO$Political_Preference, na.rm = T)
mean(d$Population_Mean_Income)
###
hist(d$Population_Mean_Income)
###
hist(d$Household_Income)
mean(d$Household_Income)
mean(d$Household_Income,na.rm = T)
sd(d$Household_Income,na.rm = T)
max(d$Household_Income)
max(d$Household_Income, na.rm = T)
max(scale(d$Household_Income, na.rm = T))
max(scale(d$Household_Income), na.rm = T)
hist(scale(d$Household_Income))
plot(d$gender)
scale(d$Household_Income)
range(scale(d$Household_Income))
range(scale(d$Household_Income), na.rm = T)
range(scale(d$age), na.rm = T)
