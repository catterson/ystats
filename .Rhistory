stringsAsFactors = T, na.strings = "")
head(covid) # testing to see that this worked
nrow(covid) # the sample size
names(covid) # the names of the variables
covid$Handwash
covid <- read.csv("../datasets/covid-data/covid_behavior_data.csv",
stringsAsFactors = T)
hist(covid$Handwash, col = 'black', bor = 'white',
main = "Handwashing Behavior", xlab = "")
hist(covid$Mask, col = 'black', bor = 'white',
main = "Masking Behavior", xlab = "Frequency (0 = Did Not Do)\n(4 = Very often or Always Do")
par(mfrow = c(1,2)) # splitting my graphics window
hist(covid$Handwash, col = 'black', bor = 'white',
main = "Handwashing Behavior",
xlab = "Frequency (0 = Did Not Do)\n(4 = Very often or Always Do")
hist(covid$Mask, col = 'black', bor = 'white',
main = "Masking Behavior",
xlab = "Frequency (0 = Did Not Do)\n(4 = Very often or Always Do")
hist(covid$Mask, col = 'black', bor = 'white',
main = "Masking Behavior",
xlab = "Frequency\n(0 = Did Not Do)\n(4 = Very often or Always Do)")
par(mfrow = c(1,2)) # splitting my graphics window
hist(covid$Handwash, col = 'black', bor = 'white',
main = "Handwashing Behavior",
xlab = "Frequency\n(0 = Did Not Do; 4 = Very Often or Always Do)")
hist(covid$Mask, col = 'black', bor = 'white',
main = "Masking Behavior",
xlab = "Frequency\n(0 = Did Not Do; 4 = Very Often or Always Do)")
par(mfrow = c(1,2)) # splitting my graphics window
hist(covid$Handwash, col = 'black', bor = 'white',
main = "Handwashing Behavior (Self-Reported)",
xlab = "(0 = Did Not Do; 4 = Very Often or Always Do)")
hist(covid$Mask, col = 'black', bor = 'white',
main = "Masking Behavior (Self-Reported)",
xlab = "(0 = Did Not Do; 4 = Very Often or Always Do)")
par(mfrow = c(1,2)) # splitting my graphics window
hist(covid$Handwash, col = 'black', bor = 'white',
main = "Handwashing Behavior (Self-Reported)",
xlab = "0 = Did Not Do\n4 = Very Often or Always Do")
hist(covid$Mask, col = 'black', bor = 'white',
main = "Masking Behavior (Self-Reported)",
xlab = "0 = Did Not Do\n4 = Very Often or Always Do)
par(mfrow = c(1,2)) # splitting my graphics window
hist(covid$Handwash, col = 'black', bor = 'white',
main = "Handwashing Behavior (Self-Reported)",
xlab = "0 = Did Not Do\n4 = Very Often or Always Do")
hist(covid$Mask, col = 'black', bor = 'white',
main = "Masking Behavior (Self-Reported)",
xlab = "0 = Did Not Do\n4 = Very Often or Always Do)
par(mfrow = c(1,2)) # splitting my graphics window
hist(covid$Handwash, col = 'black', bor = 'white',
main = "Handwashing Behavior (Self-Reported)",
t(covid$Handwash, col = 'black', bor = 'white',
main = "Handwashing Behavior (Self-Reported)",
xlab = "0 = Did Not Do\n4 = Very Often or Always Do")
hist(covid$Handwash, col = 'black', bor = 'white',
main = "Handwashing Behavior (Self-Reported)",
xlab = "0 = Did Not Do\n4 = Very Often or Always Do")
hist(covid$Mask, col = 'black', bor = 'white',
main = "Masking Behavior (Self-Reported)",
xlab = "0 = Did Not Do\n4 = Very Often or Always Do")
par(mfrow = c(1,2)) # splitting my graphics window
hist(covid$Handwash, col = 'black', bor = 'white',
main = "Handwashing Behavior (Self-Reported)",
xlab = "0 = Did Not Do\n4 = Very Often or Always Do")
hist(covid$Mask, col = 'black', bor = 'white',
main = "Masking Behavior (Self-Reported)",
xlab = "0 = Did Not Do\n4 = Very Often or Always Do")
plot(covid$gender, col = 'black')
par(mfrow = c(1,3))
plot(covid$gender, col = 'black', xlab = "Gender")
plot(covid$ethnicity, col = 'black', xlab = "Ethnicity")
plot(covid$political_party, col = 'black', xlab = "Political Orientation")
par(mfrow = c(1,3))
plot(covid$gender, col = 'black', xlab = "Gender")
plot(covid$ethnicity, col = 'black', xlab = "Ethnicity")
plot(covid$political_party, col = 'black', xlab = "Political Orientation")
summary(data.frame(covid$gender,
covid$ethnicity,
covid$political_party))
# Chunk 1
#| include: false
d <- read.csv("../datasets/Self-Esteem Dataset/data.csv", stringsAsFactors = T, na.strings = "0", sep = "\t")
d <- read.csv("../datasets/Self-Esteem Dataset/data.csv", stringsAsFactors = T, na.strings = "0", sep = "\t")
d <- read.csv("./datasets/Self-Esteem Dataset/data.csv", stringsAsFactors = T, na.strings = "0", sep = "\t")
SELFES.df <- data.frame(d[,c(1:2,4,6,7)], 5-d[,c(3,5,8:10)])
d$SELFES <- rowMeans(SELFES.df, na.rm = T)
hist(d$SELFES, col = 'black', bor = 'white',
main = "Histogram of Self-Esteem",
xlab = "Self-Esteem Score", breaks = 30)
hist(d$SELFES, col = 'black', bor = 'white',
main = "Histogram of Self-Esteem",
xlab = "Self-Esteem Score", breaks = 10)
hist(d$SELFES, col = 'black', bor = 'white',
main = "Histogram of Self-Esteem",
xlab = "Self-Esteem Score", breaks = 15)
mean(d$SELFES)
mean(d$SELFES, na.rm = T)
unlink("chapters/3R_Description_cache", recursive = TRUE)
# Chunk 1
#| include: false
d <- read.csv("./datasets/Self-Esteem Dataset/data.csv", stringsAsFactors = T, na.strings = "0", sep = "\t")
SELFES.df <- data.frame(d[,c(1:2,4,6,7)], 5-d[,c(3,5,8:10)])
d$SELFES <- rowMeans(SELFES.df, na.rm = T)
# Chunk 2
hist(d$SELFES, col = 'black', bor = 'white',
main = "Histogram of Self-Esteem",
xlab = "Self-Esteem Score", breaks = 15)
#| include: false
d <- read.csv("./datasets/Self-Esteem Dataset/data.csv", stringsAsFactors = T, na.strings = "0", sep = "\t")
SELFES.df <- data.frame(d[,c(1:2,4,6,7)], 5-d[,c(3,5,8:10)])
d$SELFES <- rowMeans(SELFES.df, na.rm = T)
#| include: false
d <- read.csv("./datasets/Self-Esteem Dataset/data.csv", stringsAsFactors = T, na.strings = "0", sep = "\t")
SELFES.df <- data.frame(d[,c(1:2,4,6,7)], 5-d[,c(3,5,8:10)])
d$SELFES <- rowMeans(SELFES.df, na.rm = T)
# Chunk 1
#| include: false
d <- read.csv("./datasets/Self-Esteem Dataset/data.csv", stringsAsFactors = T, na.strings = "0", sep = "\t")
SELFES.df <- data.frame(d[,c(1:2,4,6,7)], 5-d[,c(3,5,8:10)])
d$SELFES <- rowMeans(SELFES.df, na.rm = T)
# Chunk 2
hist(d$SELFES, col = 'black', bor = 'white',
main = "Histogram of Self-Esteem",
xlab = "Self-Esteem Score", breaks = 15)
#| include: false
d <- read.csv("../datasets/Self-Esteem Dataset/data.csv", stringsAsFactors = T, na.strings = "0", sep = "\t")
head(d)
names(d)
summary(as.factor(d$Q4))
SELFES.df <- data.frame(d[,c(1:2,4,6,7)], 5-d[,c(3,5,8:10)])
summary(SELFES.df)
library(psych)
alpha(SELFES.df)
d$SELFES <- rowMeans(SELFES.df, na.rm = T)
hist(d$SELFES, col = 'black', bor = 'white',
main = "Histogram of Self-Esteem",
xlab = "Self-Esteem Score", breaks = 15)
cal <- read.csv("~/Dropbox/!WHY STATS/Class Datasets/cal_mini_SP25.csv")
head(cal)
cal <- read.csv("~/Dropbox/!WHY STATS/Class Datasets/cal_mini_SP25.csv", stringsAsFactors = T)
plot(cal$drink)
plot(cal$stoned72)
cal <- read.csv("~/Dropbox/!WHY STATS/Class Datasets/cal_mini_SP25.csv", stringsAsFactors = T, na.strings = "")
plot(cal$stoned72)
plot(happy ~ stoned72, data = cal)
lm(happy ~ stoned72, data = cal)
summary(lm(happy ~ stoned72, data = cal))
summary(lm(bored ~ stoned72, data = cal))
summary(lm(bored ~ drink, data = cal))
plot(cal$drink)
summary(lm(happy ~ drink, data = cal))
names(cal)
summary(lm(pace ~ drink, data = cal))
summary(lm(pace ~ stoned72, data = cal))
summary(lm(engaged ~ stoned72, data = cal))
summary(lm(engaging ~ stoned72, data = cal))
hist(cal$pace)
hist(cal$engaging)
hist(as.factor(cal$engaging))
plot(as.factor(cal$engaging))
plot(as.factor(cal$pace))
hist(cal$height)
ec <- read.csv("../datasets/ec_data.csv") # Note: make sure to change the *path* in the `read.csv()` function to point R to the correct spot to import the ec dataset from YOUR computer.
#| column: margin
library(psych) # make sure you install.packages("psych") first!
alpha(extra.df)
ec <- read.csv("../datasets/ec_data.csv") # Note: make sure to change the *path* in the `read.csv()` function to point R to the correct spot to import the ec dataset from YOUR computer.
extra.df <- data.frame(ec$e1, ec$e2, ec$e3, # the three positively keyed items
ec$e4r, ec$e5r, ec$e6r) # the three negatively keyed items
head(extra.df) # this code checks my work and make sure my newly created dataframe in fact contain the positively and negatively keyed items
extra.df <- data.frame(ec$e1, ec$e2, ec$e3, # the three positively keyed items
6-ec$e4r, 6-ec$e5r, 6-ec$e6r) # the three negatively keyed items
head(extra.df) # this code checks my work and make sure my newly created dataframe in fact contain the positively and negatively keyed items. Note that there seems to be more consistency in the scores for each individual - people who are low in e1-e3 are now also low in e4r - e6r.
#| column: margin
library(psych) # make sure you install.packages("psych") first!
alpha(extra.df)
library(tidyverse)
waterintake <- c("yes", "no", "yes", "yes", "yes")
waterintake
plot(waterintake)
as.factor(waterintake) # a factor variable
plot(waterintake)
as.factor(waterintake) # tranforms waterintake into a factor variable
waterintake
waterintake <- as.factor(waterintake) # teaches R to remember this transformation.
plot(waterintake)
waterintake <- c("yes", "no", "yes", "yes", "yes")
plot(waterintake) # now it works :)
waterintake
d <- read.csv("~/Dropbox/!WHY STATS/Chapter Datasets/World-happiness-report-2024.csv", stringsAsFactors=TRUE)
View(d)
world_happiness_dataset_I_am_aNaLYZING_today <- read.csv("~/Dropbox/!WHY STATS/Chapter Datasets/World-happiness-report-2024.csv", stringsAsFactors=TRUE)
d <- read.csv("~/Dropbox/!WHY STATS/Chapter Datasets/World-happiness-report-2024.csv", stringsAsFactors=TRUE)
w <- read.csv("~/Dropbox/!WHY STATS/Chapter Datasets/World-happiness-report-2024.csv", stringsAsFactors=TRUE)
hap <- read.csv("~/Dropbox/!WHY STATS/Chapter Datasets/World-happiness-report-2024.csv", stringsAsFactors=TRUE)
d <- read.csv("~/Dropbox/!WHY STATS/Chapter Datasets/World-happiness-report-2024.csv", stringsAsFactors=TRUE)
head(d)
nrow(d)
names(d)
names(d)
names(d)
Generosity
d$Generosity # how would you say this outloud??
length(d$Generosity)
hist(d$Generosity) # hist for numeric data
#### RANGE : range is from 0 to .5 :
range(d$Generosity)
#### RANGE : range is from 0 to .5 :
range(d$Generosity, na.rm = t)
range(d$Generosity, na.rm = T)
hist(d$Generosity, breaks = 20) # hist for numeric data
abline(v = mean(d$Generosity, na.rm = T), col = 'green', lwd = 5)
mean(d$Generosity, na.rm = T)
abline(v = median(d$Generosity, na.rm = T), col = 'blue', lwd = 5)
median(d$Generosity, na.rm = T)
sd(d$Generosity, na.rm = T)
abline(v = mean(d$Generosity, na.rm = T) + sd(d$Generosity, na.rm = T), col = 'green', lwd = 2, lty = 'dashed')
abline(v = mean(d$Generosity, na.rm = T) - sd(d$Generosity, na.rm = T), col = 'green', lwd = 2, lty = 'dashed')
mean(d$Generosity, na.rm = T) #
## but countries differ!
sd(d$Generosity)
## but countries differ!
sd(d$Generosity, na.rm = T)
hist(d$Generosity, breaks = 20) # hist for numeric data. required to draw the line!
#### MEAN : .146 = don't know the scale so hard to interpret this statistic!!!! but this is the value that is closest to all the data points in the distribution.
abline(v = mean(d$Generosity na.rm = T), col = 'green', lwd = 5)
#### MEAN : .146 = don't know the scale so hard to interpret this statistic!!!! but this is the value that is closest to all the data points in the distribution.
abline(v = 10)
#### MEAN : .146 = don't know the scale so hard to interpret this statistic!!!! but this is the value that is closest to all the data points in the distribution.
abline(v = .2)
abline(h = 10)
hist(d$Generosity, breaks = 20)
abline(v = .2)
abline(v = .2, lwd = 5)
abline(v = .2, lwd = 50)
abline(v = .2, lwd = 500)
abline(v = .2, lwd = 5)
abline(v = .2, lwd = 5)
abline(v = .2, lwd = 5)
abline(v = .2, lwd = 5)
abline(v = .2, lwd = 5)
abline(v = .2, lwd = 5)
abline(v = .2, lwd = 1)
abline(v = .2, lwd = 1)
abline(v = .2, lwd = 1)
abline(v = .2, lwd = 1)
abline(v = .2, lwd = 1)
abline(v = .2, lwd = 1)
abline(v = .2, lwd = 1)
abline(v = .2, lwd = 1)
abline(v = .2, lwd = 1)
abline(v = .2, lwd = 1)
abline(v = .2, lwd = 1)
abline(v = .2, lwd = 1)
abline(v = .2, lwd = 1)
abline(v = .2, lwd = 1, col = 'green')
hist(d$Generosity, breaks = 20)
mean(d$Generosity, na.rm = T)
abline(v = .1462714, lwd = 4, col = 'green')
mean(d$Generosity, na.rm = T)
abline(v = mean(d$Generosity, na.rm = T), lwd = 4, col = 'red')
d$Generosity[1:2] <- 1000
hist(d$Generosity)
hist(d$Generosity, breaks = 100)
d$Generosity[1:2] <- 100
hist(d$Generosity, breaks = 100)
d$Generosity[1:2] <- 10
hist(d$Generosity, breaks = 100)
d$Generosity[1:2] <- 3
hist(d$Generosity, breaks = 100)
abline(v = .1462714, lwd = 4, col = 'green') # our original mean
abline(v = mean(d$Generosity, na.rm = T), lwd = 4, col = 'red')
median(d$Generosity, na.rm = T)
r <- read.csv("~/Downloads/SDC - Data - Anonymized.csv", stringsAsFactors = T)
head(r)
nrow(r)
summary(r$Gender)
summary(as.factor(r$Gender))
r <- read.csv("~/Downloads/data_countries.csv")
head(r)
names(r)
nrow(r)
r <- read.csv("~/Downloads/data_notimers.csv")
names(r)
nrow(r)
library(readr)
r <- read.table("~/Downloads/IPIP120.dat")
r <- read.table("~/Downloads/IPIP120.dat", sep = " ")
r <- read.delim("~/Downloads/IPIP120.dat")
names(r)
head(r)
r
names(r)
r <- read.table("~/Downloads/IPIP120.dat", )
r <- read.table("~/Downloads/IPIP120.dat")
r <- read.table("~/Downloads/IPIP120.dat", sep = "")
r <- read.table("~/Downloads/IPIP120.dat", sep = ".")
head(r)
r <- read.csv("~/Downloads/AIID_subset_confirmatory_masked_data.csv")
nrow(r)
names(r)
r$prefer
r$domain
d <- read.csv("../datasets/Self-Esteem Dataset/data.csv", stringsAsFactors = T, na.strings = "0", sep = "\t")
SELFES.df <- data.frame(d[,c(1:2,4,6,7)], 5-d[,c(3,5,8:10)])
d$SELFES <- rowMeans(SELFES.df, na.rm = T)
hist(d$SELFES, col = 'black', bor = 'white',
main = "Histogram of Self-Esteem",
xlab = "Self-Esteem Score", breaks = 15)
hist(d$age)
d$age > 140
d[d$age > 140,]$age
na.omit(d[d$age > 140,]$age)
na.omit(d[d$age > 140,]$age)[1]
na.omit(d[d$age > 140,]$age)
d[d$age > 120 & !is.na(d$age),]$age
d[d$age > 120 & !is.na(d$age)]$age
d[d$age > 120 & !is.na(d$age),]$age
mean(d$age, na.rm = T)
summary(d$age, na.rm = T)
round(summary(d$age, na.rm = T), 2)
round(summary(d$age, na.rm = T), 4)
mean(d$age, na.rm = T)
median(d$age, na.rm = T)
d[d$age > 120 & !is.na(d$age),]$age <- NA
hist(d$age)
d[d$age > 80 & !is.na(d$age),]$age
elders
elders <- d[d$age > 80 & !is.na(d$age),]$age
elders
scale(elders)
scale(elders)
t(scale(elders))
mean(d$age)
mean(d$age, na.rm = T)
sd(d$age)
sd(d$age, na.rm = T)
(elders - mean(d$age, na.rm = T))/ # distance from the mean...divided by.
sd(d$age, na.rm = T) # standard deviation
g <- read.csv("~/Downloads/3.1_MiniData_FA25.csv", stringsAsFactors = T) # DL from Google Forms.
names(g)
g <- g[,c(1,2:33)] # removing username & qualitative response to de-identify
gnames <- names(g) # original names saved
names(g)
names(g) <- c("Time","fb.friends", "insta.followers", "insta.follows", "bored", "thirsty",
"tired", "satlife", "viking.love", "r.love", "socmeduse", "attention", "hrs.sleep", "data.power", "corp.power",
"success.work", "success.priv", "selfes", "catdog", "tuhobura", "dvc.sports", "caffeine", "had.breakfast",
"is.female", "long.hair", "has.water", "shoe.size", "height", "is.happy", "drink.alcohol", "stoned72",
"polyglot", "waitlist") # new names.
minig_code <- data.frame(Variable = names(g), Item = gnames) # creates the codebook. Yeah!
head(minig_code) # yeah!
tail(minig_code)
write.csv(minig_code, "~/Dropbox/!WHY STATS/Class Datasets/214 - Class Datasets - FA25/CODEBOOK_dvc_mini.csv", row.names = F)
write.csv(g, "~/Dropbox/!WHY STATS/Class Datasets/214 - Class Datasets - FA25/mini_dvc_data.csv", row.names = F)
d <- read.csv("~/Dropbox/!WHY STATS/Class Datasets/214 - Class Datasets - FA25/mini_dvc_data.csv", stringsAsFactors = T)
head(d)
hist(d$insta.followers)
hist(d$insta.follows)
hist(d$insta.follows, breaks = 20)
hist(d$hrs.sleep)
hist(d$hrs.sleep, breaks = 20)
hist(d$hrs.sleep, breaks = 20, xlim = c(0,30))
hist(d$hrs.sleep, breaks = 20, xlim = c(0,30),
main = "",
xlab = "Hours of Sleep")
summary(d$hrs.sleep)
describe(d$hrs.sleep)
## Chapter 4 : Scales
library(psych)
describe(d$hrs.sleep)
nrow(d)
a <- read.csv("~/Downloads/AIID_subset_exploratory.csv", stringsAsFactors = T)
nrow(a)
names(a)
a <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/Big Five and Gender/big_five_scores.csv", stringsAsFactors = T)
nrow(a)
names(a)
a <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/AIID/AIID_subset_exploratory.csv", stringsAsFactors = T)
nrow(a)
names(a)
a[,216]
names(a)
names(a)[c(7:20, 228:520)]
b <- a[,c(7:20, 228:520)]
head(b)
EXTRA.df <- with(b, data.frame(bfi_e1, bfi_e2, bfi_e3, bfi_e4, bfi_e5, bfi_e6))
alpha(EXTRA.df)
write.csv(b, "~/Dropbox/!WHY STATS/Professor Datasets/big_personality.csv", row.names = F)
p <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/big_personality.csv", stringsAsFactors = T)
p <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/Big Personality/big_personality.csv", stringsAsFactors = T)
names(p)
d <- read.csv("~/Dropbox/!WHY STATS/Class Datasets/214 - Class Datasets - FA25/Mini Dataset/mini_dvc_data.csv", stringsAsFactors = T)
head(d)
nrow(d)
d$hrs.sleep
new.hrs.sleep <- d$hrs.sleep
names(d)
d$new.hrs.sleep <- d$hrs.sleep
names(d)
#### remove the outliers from the copy.
d$new.hrs.sleep # the variable
d$new.hrs.sleep[46] # indexing to find the outlier.
d$new.hrs.sleep[46]
d$new.hrs.sleep
d$new.hrs.sleep
d
d$new.hrs.sleep[46]
d$new.hrs.sleep[46] # indexing to find the outlier.
d$new.hrs.sleep
d$new.hrs.sleep[d$new.hrs.sleep > 12]
d$new.hrs.sleep > 12
d[d$new.hrs.sleep > 12]
d$new.hrs.sleep[d$new.hrs.sleep > 12] # using a rule in the index to find the outlier.
hist(d$hrs.sleep)
d$new.hrs.sleep < 12 # an operator to apply a rule to all the data.
d$new.hrs.sleep > 12 # an operator to apply a rule to all the data.
d$new.hrs.sleep
d$new.hrs.sleep[d$new.hrs.sleep > 12]
d$new.hrs.sleep[d$new.hrs.sleep > 12] <- NA
rs.sleep
## IF THIS WORKS, WHAT SHOULD I SEE WHEN I RUN THE CODE BELOW????
## TYPE IN CHAT, WAIT TO HIT SUBMIT, OKAY TO SAY "IM LOST"
d$new.hrs.sleep
hist(d$new.hrs.sleep)
par(mfrow = c(1,2)) # breaks up graphics window into a 1rowx2column grid
hist(d$hrs.sleep)
hist(d$new.hrs.sleep)
hist(d$hrs.sleep, main = "", xlim = c(0,25), breaks = 20)
hist(d$new.hrs.sleep, main = "", xlim = c(0,25), breaks = 20)
hist(d$hrs.sleep, main = "", xlim = c(0,25), breaks = 15)
hist(d$new.hrs.sleep, main = "", xlim = c(0,25), breaks = 15)
hist(d$hrs.sleep, main = "", xlim = c(0,25), breaks = 20)
hist(d$new.hrs.sleep, main = "", xlim = c(0,25), breaks = 10)
par(mfrow = c(1,2)) # breaks up graphics window into a 1rowx2column grid
hist(d$hrs.sleep, main = "Yes Outliers", xlim = c(0,25), breaks = 20, xlab = "Hours of Sleep")
hist(d$new.hrs.sleep, main = "No Outliers", xlim = c(0,25), breaks = 10, xlab = "Hours of Sleep")
hist(d$fb.friends)
hist(d$hrs.sleep, main = "Yes Outliers", xlim = c(0,25), breaks = 20, xlab = "Hours of Sleep")
hist(d$new.hrs.sleep, main = "No Outliers", xlim = c(0,25), breaks = 10, xlab = "Hours of Sleep")
hist(d$hrs.sleep, main = "Yes Outliers", xlim = c(0,25), breaks = 20, xlab = "Hours of Sleep")
hist(d$new.hrs.sleep, main = "No Outliers", xlim = c(0,25), breaks = 10, xlab = "Hours of Sleep")
hist(d$hrs.sleep, main = "Yes Outliers", xlim = c(0,25), breaks = 20, xlab = "Hours of Sleep")
hist(d$new.hrs.sleep, main = "No Outliers", xlim = c(0,25), breaks = 10, xlab = "Hours of Sleep")
par(mfrow = c(1,2)) # breaks up graphics window into a 1rowx2column grid
hist(d$hrs.sleep, main = "Yes Outliers", xlim = c(0,25), breaks = 20, xlab = "Hours of Sleep")
hist(d$new.hrs.sleep, main = "No Outliers", xlim = c(0,25), breaks = 10, xlab = "Hours of Sleep")
par(mfrow = c(1,3)) # breaks up graphics window into a 1rowx2column grid
hist(d$hrs.sleep, main = "Yes Outliers", xlim = c(0,25), breaks = 20, xlab = "Hours of Sleep")
hist(d$new.hrs.sleep, main = "No Outliers", xlim = c(0,25), breaks = 10, xlab = "Hours of Sleep")
hist(d$fb.friends)
par(mfrow = c(2,2)) # breaks up graphics window into a 1rowx2column grid
hist(d$hrs.sleep, main = "Yes Outliers", xlim = c(0,25), breaks = 20, xlab = "Hours of Sleep")
hist(d$new.hrs.sleep, main = "No Outliers", xlim = c(0,25), breaks = 10, xlab = "Hours of Sleep")
hist(d$insta.followers)
hist(d$insta.follows)
par(mfcol = c(2,2)) # breaks up graphics window into a 1rowx2column grid
hist(d$hrs.sleep, main = "Yes Outliers", xlim = c(0,25), breaks = 20, xlab = "Hours of Sleep")
hist(d$new.hrs.sleep, main = "No Outliers", xlim = c(0,25), breaks = 10, xlab = "Hours of Sleep")
hist(d$insta.followers)
hist(d$insta.follows)
par(mfrow = c(2,2)) # breaks up graphics window into a 1rowx2column grid
hist(d$hrs.sleep, main = "Yes Outliers", xlim = c(0,25), breaks = 20, xlab = "Hours of Sleep")
hist(d$new.hrs.sleep, main = "No Outliers", xlim = c(0,25), breaks = 10, xlab = "Hours of Sleep")
hist(d$insta.followers)
hist(d$insta.follows)
par(mfrow = c(1,1))
hist(d$height)
d$height
## Load and check to make sure the data loaded correctly.
d <- read.csv("~/Dropbox/!WHY STATS/Class Datasets/214 - Class Datasets - FA25/Mini Dataset/mini_dvc_data.csv", stringsAsFactors = T, header = FALSE)
head(d)
## Load and check to make sure the data loaded correctly.
d <- read.csv("~/Dropbox/!WHY STATS/Class Datasets/214 - Class Datasets - FA25/Mini Dataset/mini_dvc_data.csv", stringsAsFactors = T, header = FALSE)
head(d)
d$hrs.sleep
par(mfrow = c(2,2)) # breaks up graphics window into a 1rowx2column grid
hist(d$hrs.sleep, main = "Yes Outliers", xlim = c(0,25), breaks = 20, xlab = "Hours of Sleep")
d <- read.csv("~/Dropbox/!WHY STATS/Class Datasets/214 - Class Datasets - FA25/Mini Dataset/mini_dvc_data.csv", stringsAsFactors = T)
head(d)
nrow(d)
d$hrs.sleep
## Graph and Describe a Variable
## Lab Question : There are outliers in these data. The variable hrs.sleep (or find another variable!!!!) has outliers. Create a copy of the variable, then remove the outliers from the copy. Graph the original and copy side-by-side using the par() function. Report the descriptive statistics for both variables. What changed? What stayed the same?
d$hrs.sleep
#### copy the variable
new.hrs.sleep <- d$hrs.sleep
names(d) # QUESTION : how to get new.hrs.sleep to be a part of our dataset???
d$new.hrs.sleep <- d$hrs.sleep
names(d)
#### remove the outliers from the copy.
d$new.hrs.sleep # the variable
## QUESTION : how to get R to find the outlier? Type ideas (or IDK) and submit when prof says GO
d$new.hrs.sleep[46] # indexing to find the outlier.
d$new.hrs.sleep[d$new.hrs.sleep > 12] # using a rule in the index to find the outlier.
d$new.hrs.sleep > 12 # an operator to apply a rule to all the data.
d$new.hrs.sleep[d$new.hrs.sleep > 12] <- NA
## IF THIS WORKS, WHAT SHOULD I SEE WHEN I RUN THE CODE BELOW????
## TYPE IN CHAT, WAIT TO HIT SUBMIT, OKAY TO SAY "IM LOST"
d$new.hrs.sleep
## graphing the variable(s)
par(mfrow = c(2,2)) # breaks up graphics window into a 1rowx2column grid
hist(d$hrs.sleep, main = "Yes Outliers", xlim = c(0,25), breaks = 20, xlab = "Hours of Sleep")
hist(d$new.hrs.sleep, main = "No Outliers", xlim = c(0,25), breaks = 10, xlab = "Hours of Sleep")
hist(d$insta.followers)
hist(d$insta.follows)
hist(d$height)
hist(d$height)
describe(d$height)
d$height[d$height > 120]
d$height[d$height > 120] <- NA
hist(d$height)
