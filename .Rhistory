#### copy the variable
new.hrs.sleep <- d$hrs.sleep
names(d) # QUESTION : how to get new.hrs.sleep to be a part of our dataset???
d$new.hrs.sleep <- d$hrs.sleep
names(d)
#### remove the outliers from the copy.
d$new.hrs.sleep # the variable
## QUESTION : how to get R to find the outlier? Type ideas (or IDK) and submit when prof says GO
d$new.hrs.sleep[46] # indexing to find the outlier.
d$new.hrs.sleep[d$new.hrs.sleep > 12] # using a rule in the index to find the outlier.
d$new.hrs.sleep > 12 # an operator to apply a rule to all the data.
d$new.hrs.sleep[d$new.hrs.sleep > 12] <- NA
## IF THIS WORKS, WHAT SHOULD I SEE WHEN I RUN THE CODE BELOW????
## TYPE IN CHAT, WAIT TO HIT SUBMIT, OKAY TO SAY "IM LOST"
d$new.hrs.sleep
## graphing the variable(s)
par(mfrow = c(2,2)) # breaks up graphics window into a 1rowx2column grid
hist(d$hrs.sleep, main = "Yes Outliers", xlim = c(0,25), breaks = 20, xlab = "Hours of Sleep")
hist(d$new.hrs.sleep, main = "No Outliers", xlim = c(0,25), breaks = 10, xlab = "Hours of Sleep")
hist(d$insta.followers)
hist(d$insta.follows)
hist(d$height)
hist(d$height)
describe(d$height)
d$height[d$height > 120]
d$height[d$height > 120] <- NA
hist(d$height)
d <- read.csv("~/Dropbox/!WHY STATS/Chapter Datasets/narcissism_data.csv", stringsAsFactors = T)
names(d)
d$age
hist(d$age)
library(psy)
library(psych)
## Q1. What is the mean of the variable age.
describe(d$age)
d$elapse
hist(d$elapse)
mean(d$age)
## Q. How many individuals are in the dataset?
nrow(d)
mean(d$age)
## Q2. What is the standard deviation of the variable age?
sd(d$age) #
## Q3.
hist(d$age)
d$age[d$age > 100]
outliers <- d$age[d$age > 100]
length(outliers)
d$age[d$age > 100]
d$age[d$age > 100] <- NA
length(outliers)
scale(d$age)[d$age > 100]
d$age
mean(d$age) # 34.01
d <- read.csv("~/Dropbox/!WHY STATS/Chapter Datasets/narcissism_data.csv", stringsAsFactors = T)
names(d)
library(psych)
## Q. How many individuals are in the dataset?
nrow(d) # 11243
## Q. What is the mean of the variable age.
describe(d$age)
mean(d$age) # 34.01
## Q2. What is the standard deviation of the variable age?
sd(d$age) # 15.02
## Q3. There are outliers in the variable age.
## How many outliers are in the dataset?
hist(d$age)
outliers <- d$age[d$age > 100]
length(outliers)
scale(d$age)[d$age > 100]
d$age
## Q3. What is the oldest person's age in the dataset?
max(d$age)
d$age[d$age > 100]
d$ageC <- d$age
d$ageC[d$ageC > 100]
d$ageC[d$ageC > 100] <- NA
hist(d$ageC)
## Q. What is the oldest person's age in the dataset?
range(d$age) # 509
## Q. What is this person's age as a z-score?
range(scale(d$age))
## Q. What is the youngest person's age in the dataset?
range(d$age) #
## Q. What is this person's age as a z-score?
range(scale(d$age)) # 31.63
## Q. How many people are in the dataset whose age is greater than 100 years?
d$age[d$age > 100]
length(d$age[d$age > 100])
## Q. How many people are in the dataset whose age is less than 18 years?
d$age[d$age < 18]
length(d$age[d$age < 18])
## Remove anyone whose age was greater than 100 or less than 18 years old from the dataset.
## Q. What is the new mean of the variable age?
d$ageC <- d$age
d$ageC[d$ageC > 100 | d$ageC < 18]
d$ageC[d$ageC > 100 | d$ageC < 18] <- NA
## Q. What is the new mean of the variable age?
mean(d$ageC, na.rm = T)
## Q. What is the new standard deviation of the variable age?
sd(d$ageC, na.rm = T)
## Q. What is the median of the variable age?
median(d$age)
## Q. What is the new median of the variable age?
median(d$ageC)
## Q. What is the new median of the variable age?
median(d$ageC, na.rm = T)
range(scale(d$ageC))
## Q. What is the oldest person's age as a z-score?
range(scale(d$ageC), na.rm = T)
## Q.
hist(d$ageC)
## Q. What is the median of the variable age?
median(d$age)
## Q. What is the new median of the variable age?
median(d$ageC, na.rm = T)
d <- read.csv("../datasets/Self-Esteem Dataset/data.csv", stringsAsFactors = T, na.strings = "0", sep = "\t")
SELFES.df <- data.frame(d[,c(1:2,4,6,7)], 5-d[,c(3,5,8:10)])
d$SELFES <- rowMeans(SELFES.df, na.rm = T)
hist(d$SELFES, col = 'black', bor = 'white',
main = "Histogram of Self-Esteem",
xlab = "Self-Esteem Score", breaks = 15)
hist(d$age)
d[d$age > 120 & !is.na(d$age),]$age
d$age[d$age > 100]
d[d$age > 120 & !is.na(d$age)]$age
d$age[d$age > 120 & !is.na(d$age)]
d$age[d$age > 120]
d$age[d$age > 120 & !is.na(d$age)]
d$age[d$age > 120 & !is.na(d$age)]
d$age[d$age > 100]
d$age[d$age > 100] <- NA
hist(d$age)
d$age[d$age < 18 & !is.na(d$age)]
min(d$age, na.rm = T)
hist(d$age)
d$age[d$age < 18 & !is.na(d$age)] <- NA
hist(d$age)
mean(d$age, na.rm = T)
hist(d$age, xlim = c(18,100))
hist(d$age, xlim = c(10,100), breaks = 20)
hist(d$age, xlim = c(0,100), breaks = 30)
hist(d$age, xlim = c(15,100), breaks = 30)
hist(d$age, xlim = c(15,100), breaks = 30, main = "Histogram of Age (Outliers Removed)", xlim = "Age (in years)")
hist(d$age, xlim = c(15,100), breaks = 30, main = "Histogram of Age (Outliers Removed)", xlab = "Age (in years)")
mean(d$age, na.rm = T)
sd(d$age, na.rm = T)
d <- read.csv("../datasets/Self-Esteem Dataset/data.csv", stringsAsFactors = T, na.strings = "0", sep = "\t")
SELFES.df <- data.frame(d[,c(1:2,4,6,7)], 5-d[,c(3,5,8:10)])
d$SELFES <- rowMeans(SELFES.df, na.rm = T)
d$SELFES
d$SELFES[3]
d$SELFES - mean(d$SELFES, na.rm = T) / # distance from the mean, divided by....
sd(d$SELFES, na.rm = T) # the standard deviation
zSELF <- d$SELFES - mean(d$SELFES, na.rm = T) / # distance from the mean, divided by....
sd(d$SELFES, na.rm = T) # the standard deviation
par(mfrow = c(1,2))
hist(d$SELFES)
hist(scale(d$SELFES))
hist(scale(d$SELFES), breaks = 5)
hist(d$SELFES, breaks = 5)
hist(d$SELFES, breaks = 5)
hist(scale(d$SELFES), breaks = 5)
par(mfrow = c(1,2))
hist(d$SELFES, breaks = 5)
hist(scale(d$SELFES), breaks = 5)
hist(d$SELFES, breaks = c(1,2,3,4,5))
hist(scale(d$SELFES))
par(mfrow = c(1,2))
hist(d$SELFES, breaks = c(1,2,3,4,5))
hist(scale(d$SELFES), breaks = (-2, -1, 0, 1, 2))
hist(d$SELFES, breaks = c(1,2,3,4,5))
hist(scale(d$SELFES), breaks = (-2, -1, 0, 1, 2))
hist(scale(d$SELFES), breaks = c(-2, -1, 0, 1, 2))
hist(d$SELFES, breaks = "Scott")
hist(d$SELFES, breaks = "FD")
hist(d$SELFES)
plot(d$SELFES ~ d$SELFES)
hist(scale(d$SELFES), breaks = 7)
hist(d$SELFES, breaks = 7)
par(mfrow = c(1,2))
hist(d$SELFES, breaks = 7)
hist(scale(d$SELFES), breaks = 7)
hist(d$SELFES, breaks = 8)
hist(scale(d$SELFES), breaks = 8)
hist(d$SELFES, breaks = 8)
hist(scale(d$SELFES), breaks = 8)
hist(scale(d$SELFES), breaks = 6)
hist(scale(d$SELFES), breaks = 7)
hist(d$SELFES, breaks = 8)
hist(scale(d$SELFES), breaks = 7)
head(data.frame(d$SELFES, scale(d$SELFES))
)
head(data.frame("Raw Scores" = d$SELFES, "Z-Scores" = scale(d$SELFES)))
scale(d$SELFES)[1:5]
zSELF <- d$SELFES - mean(d$SELFES, na.rm = T) / # distance from the mean, divided by....
sd(d$SELFES, na.rm = T) # the standard deviation
zSELF[1:5] # just showing the first 10 z-scored variables.
d$SELFES_Z[1:5]
d$SELFES_Z <- scale(d$SELFES)
d$SELFES_Z[1:5]
zSELF <- (d$SELFES - mean(d$SELFES, na.rm = T)) / # distance from the mean, divided by....
sd(d$SELFES, na.rm = T) # the standard deviation
zSELF[1:5] # just showing the first 10 z-scored variables.
hist(d$age, xlim = c(15,100), breaks = 30, main = "Histogram of Age (Outliers Removed)", xlab = "Age (in years)")
d$age[d$age > 100 & !is.na(d$age)] # finds the outliers
d$age[d$age > 100 & !is.na(d$age)] <- NA # replaces the outliers with NA
hist(d$age) # my graph.
d$age[d$age < 18 & !is.na(d$age)]
min(d$age, na.rm = T)
d$age[d$age < 18 & !is.na(d$age)] <- NA
hist(d$age, xlim = c(15,100), breaks = 30, main = "Histogram of Age (Outliers Removed)", xlab = "Age (in years)")
mean(d$age, na.rm = T)
sd(d$age, na.rm = T)
d$age[d$age > 80]
d$age[d$age > 80 & !is.na(d$age)]
scale(d$age[d$age > 80 & !is.na(d$age)])
scale(d$age)
d$ageZ <- d$age
d$ageZ <- scale(d$age)
d$ageZ[d$age > 80 & !is.na(d$age)]
?pt
?p
?r
?p
pnorm(d$ageZ[d$age > 80 & !is.na(d$age)])
pnorm(d$ageZ[d$age > 80 & !is.na(d$age)], lower.tail = FALSE)
pnorm(d$ageZ[d$age > 80 & !is.na(d$age)])
pnorm(d$ageZ[d$age > 80 & !is.na(d$age)]) * 100
names(d)
d$SELFES
d$gender
d <- read.csv("~/Dropbox/!WHY STATS/Chapter Datasets/selfesteemdata.csv", stringsAsFactors = T)
names(d)
d <- read.csv("~/Dropbox/!WHY STATS/Chapter Datasets/hormone_data.csv", stringsAsFactors = T)
d$NPI
d$test
hist(d$test)
d <- read.csv("~/Dropbox/!WHY STATS/Chapter Datasets/World-happiness-report-2024.csv", stringsAsFactors = T)
hist(d$Log.GDP.per.capita)
hist(d$Ladder.score)
d <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/Big Personality/big_personality.csv", stringsAsFactors = T)
names(d)
hist(d$income)
d$income
plot(d$income)
summary(d)
plot(d$religion)
summary(d$religion)
d <- read.csv("~/Dropbox/!WHY STATS/Class Datasets/Culture and Awe (2024)/culture_awe_fear.csv", stringsAsFactors = T)
names(d)
## Q. How many individuals are in the dataset?
nrow(d)
hist(d$NeutralHR)
hist(d$AweHR)
hist(scale(d$AweHR))
hist(scale(d$AweRRATE))
hist(scale(d$AweSCL))
hist(scale(d$NeutralSCL))
hist(scale(d$AweSCL))
hist(scale(d$AweSCL))
hist(d$AweSCL)
hist(d$NeutralSCL)
summary(d)
describe(d)
hist(d$Shame)
hist(d$Embarrassment)
hist(d$NeutralSCL)
summary(d$NeutralSCL)
ecdf(d)
x <- ecdf(d)
ecdf(d$NeutralSCL)
x <- ecdf(d$NeutralSCL)
## Q. What
d$NeutralSCL
x(42.73)
scale(d$NeutralSCL)
pnorm(3.316722912)
x(42.73)
## Q. What percentage of scores are actually below this score in the distribution?
?ecdf
ecdf(d$NeutralSCL) # empirical cumulative distribution function
plot(ecdf(d$NeutralSCL)) # empirical cumulative distribution function
plot(ecdf(d$NeutralSCL)*100) # empirical cumulative distribution function
ecdf(d$NeutralSCL) # empirical cumulative distribution function
r <- read.csv("~/Downloads/Intra-StateWarData_v4.1.csv")
head(r)
hist(r$SideADeaths)
r$SideADeaths
r <- read.csv("~/Downloads/Intra-State-Wars-v5/INTRA-STATE WARS v5.1 CSV.csv")
head(r)
hist(r$TotalBDeaths)
r[r$TotalBDeaths > 40000,]
r[r$TotalBDeaths > 800000,]
hist(r$WDuratDays)
d <- read.csv("~/Downloads/1.1_Ch1Recap_DVC_FA25.csv", stringsAsFactors = T)
names(d)
hist(d[,27])
d[,27]
plot(d[,27])
plot(d[,29], main = "The Chapter Helped Me Learn")
e <- read.csv("~/Downloads/2.1_AfterDataReading_FA25.csv", stringsAsFactors = T)
names(e)
e <- read.csv("~/Downloads/1.1_ReadingReview_FA25.csv", stringsAsFactors = T)
names(e)
plot(d[,16], main = "The Chapter Was Interesting")
plot(e[],16], main = "The Chapter Was Interesting")
plot(e[,16], main = "The Chapter Was Interesting")
levels(d[,27])
levels(d[,27])[1] <- NA
d <- read.csv("~/Downloads/1.1_Ch1Recap_DVC_FA25.csv", stringsAsFactors = T, na.strings = "")
names(d)
levels(d[,27])[1]
plot(d[,27], main = "The Chapter Was Interesting")
plot(d[,29], main = "The Chapter Helped Me Learn")
names(d)
par(mfrow = c(1,2))
plot(d[,27], main = "Chapter 1 Was Interesting", col = "black", bor = "white")
plot(d[,29], main = "Chapter 1 Helped Me Learn", col = "black", bor = "white")
levels(d[,27])
levels(d[,27]) <- c("Disagree", "Neutral", "Agree")
levels(d[,29]) <- c("Disagree", "Neutral", "Agree"
par(mfrow = c(1,2))
levels(d[,27])
levels(d[,27]) <- c("Disagree", "Neutral", "Agree")
levels(d[,29]) <- c("Disagree", "Neutral", "Agree"
)
par(mfrow = c(1,2))
plot(d[,27], main = "Chapter 1 Was Interesting", col = "black", bor = "white")
plot(d[,29], main = "Chapter 1 Helped Me Learn", col = "black", bor = "white")
par(mfrow = c(1,2), cex = .75)
plot(d[,27], main = "Chapter 1 Was Interesting", col = "black", bor = "white")
plot(d[,29], main = "Chapter 1 Helped Me Learn", col = "black", bor = "white")
d <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/Femenist Perspective Scale/data.csv", stringsAsFactors = T)
names(d)
d <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/Femenist Perspective Scale/data.csv", stringsAsFactors = T, sep = ".")
names(d)
head(d)
d <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/Femenist Perspective Scale/data.csv", stringsAsFactors = T, sep = "\t")
head(d)
fem.df <- data.frame(d[,1:60])
fem.df
## Brain Exam - FA25
library(psych)
alpha(fem.df)
alpha(fem.df, check.keys = T)
d <- read.csv("~/Dropbox/!WHY STATS/Class Datasets/101 - Class Datasets - FA25/mini_cal_data.csv", stringsAsFactors = T)
head(d)
hist(d$corp.power)
hist(d$self.power)
hist(d$data.power)
hist(d$selfes)
hist(d$corp.power)
hist(d$corp.power, col = "black", bor = "white")
par(mfrow = c(1,1))
hist(d$corp.power, col = "black", bor = "white")
hist(d$corp.power, col = "black", bor = "white")
describe(d$corp.power)
d <- read.csv("~/Dropbox/!WHY STATS/Class Datasets/101 - Class Datasets - FA25/mini_cal_data.csv", stringsAsFactors = T)
hist(d$corp.power, col = "black", bor = "white")
describe(d$corp.power)
describe(d$corp.power)[1]
describe(d$corp.power)
describe(d$corp.power)[c(1,2,3,4,6,7)]
describe(d$corp.power)[c(1,2,3,4,8,9)]
hist(d$corp.power, col = "black", bor = "white")
describe(d$corp.power)[c(1,2,3,4,8,9)]
hist(d$corp.power, col = "black", bor = "white",
main = "Perceptions of Corporate Power Over Participants' Data")
hist(d$corp.power, col = "black", bor = "white",
main = "",
xlab = "Perceptions of Corporate Power Over Participants' Data")
describe(d$corp.power)[c(1,2,3,4,8,9)]
describe(d$corp.power)[c(1,2,3,4,8,9)]
c <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/Conspiracy Beliefs/data.csv", stringsAsFactors = T)
head(c)
cons.df <- c[,1:15]
alpha(cons.df)
c <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/Personality and Random Numbers/personality_random_number_data.csv", stringsAsFactors = T)
head(c)
cons.df <- c[,22:32]
head(cons.df)
head(cons.df)
alpha(cons.df)
s
cons.df <- c[,22:31] # the extraversion items
head(cons.df)
alpha(cons.df) # some are negatively keyed...
alpha(cons.df, check.keys = T) # some are negatively keyed...
d <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/Personality and Random Numbers/personality_random_number_data.csv", stringsAsFactors = T)
head(d)
cons.df <- d[,22:31] # the extraversion items
head(cons.df)
alpha(cons.df) # some are negatively keyed...
alpha(cons.df, check.keys = T) # some are negatively keyed...
cons.df
consd.dfPOS <- cons.df[,c(2,4,6,8,10)]
consd.dfPOS
consd.dfPOS <- cons.df[,c(1,3,5,7,9)]
consd.dfNEG <- cons.df[,c(2,4,6,8,10)]
consPOS <- cons.df[,c(1,3,5,7,9)]
consNEG <- cons.df[,c(2,4,6,8,10)]
consCLEAN <- cbind(consPOS, consNEG)
head(consCLEAN)
alpha(consCLEAN)
cons.df <- d[,22:31] # the extraversion items
head(cons.df)
alpha(cons.df) # some are negatively keyed...
alpha(cons.df, check.keys = T) # some are negatively keyed...
range(consNEG)
hist(d$O4)
d[is.na(),]
d[is.na(d),]
d[is.na(d)]
d[!is.na(d),]
d <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/Personality and Random Numbers/personality_random_number_data.csv",
stringsAsFactors = T, na.strings = "0")
head(d)
d$E1
summary(d)
##
dz <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/Personality and Random Numbers/personality_random_number_data.csv", stringsAsFactors = T)
dz
summary(dz)
dz[!is.na(dz),]
dz[is.na(dz),]
dz[is.na(dz)]
dz == 0
d == 0 # evaluates whether the entry in the dataframe is zero.
d[d == 0]
d[d == 0, ]
## Loading the Data
d <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/Personality and Random Numbers/personality_random_number_data.csv", stringsAsFactors = T)
d == 0 # evaluates whether each entry in the dataframe is zero.
d[d == 0, ]
d[d == 0]
d[d == 0] <- NA # replaces with zero
summary(d)
### ANOTHER WAY TO DO THIS IS WHEN LOADING THE DATA, YOU CAN SPECIFY WHAT NA.STRINGS SHOULD BE EQUAL TO.
d <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/Personality and Random Numbers/personality_random_number_data.csv",
stringsAsFactors = T,
na.strings = "0") # r will look for 0 and replace with NA.
head(d)
summary(d)
cons.df <- d[,22:31] # using the names and the codebook, these are the 10 extraversion items
head(cons.df)
cons.df <- d[,22:31] # using the names and the codebook, these are the 10 extraversion items
head(cons.df)
alpha(cons.df) # r is warning me that some are negatively keyed...
alpha(cons.df, check.keys = T) # seeing that some are negatively keyed...
## good to look at the codebook and confirm that these are negatively keyed (opposite of extraversion.)
consPOS <- cons.df[,c(1,3,5,7,9)] # defining the positively keyed items
consNEG <- cons.df[,c(2,4,6,8,10)] # defining the negatively keyed items
range(consNEG)
range(consNEG, na.rm = T)
consNEG <- 6-consNEG # reverse scoring my negatively keyed items
consCLEAN <- cbind(consPOS, consNEG)
head(consCLEAN)
alpha(consCLEAN)
d <- read.csv("~/Dropbox/!WHY STATS/Professor Datasets/Personality and Random Numbers/personality_random_number_data.csv",
stringsAsFactors = T,
na.strings = "0") # r will look for 0 and replace with NA.
summary(d) # same thing as before.
#### WORKING WITH A LIKERT SCALE : PROFESSOR EXAMPLE
###### STEP 1: ORGANIZING THE ITEMS AND CHECKING THE ALPHA RELIABILITY
extra.df <- d[,22:31] # using the names and the codebook, these are the 10 extraversion items
head(extra.df)
alpha(extra.df) # r is warning me that some are negatively keyed...
alpha(extra.df, check.keys = T) # seeing that some are negatively keyed...
## good to look at the codebook and confirm that these are negatively keyed (opposite of extraversion.)
extraPOS <- extra.df[,c(1,3,5,7,9)] # defining the positively keyed items
extraNEG <- extra.df[,c(2,4,6,8,10)] # defining the negatively keyed items
range(extraNEG, na.rm = T) # a 1-5 scale...good! means I did my data cleaning correctly.
extraNEG <- 6-extraNEG # reverse scoring my negatively keyed items
extraCLEAN <- cbind(extraPOS, extraNEG)
head(extraCLEAN)
alpha(extraCLEAN) # high alpha; hooray.
?rowMeans
d$EXTRA <- rowMeans(extra.df, na.rm = FALSE)
d$EXTRA
d$EXTRA <- rowMeans(extra.df, na.rm = TRUE)
hist(d$EXTRA)
names(d)
RANDO.df <- d[,2:20]
head(RANDO.df)
RANDO.df <- d[,2:21]
head(RANDO.df)
alpha(RANDO.df)
alpha(scale(RANDO.df))
scale(RANDO.df)
alpha(scale(RANDO.df))
d$RANDZ <- rowMeans(sacle(RANDO.df), na.rm = T)
d$RANDZ <- rowMeans(scale(RANDO.df), na.rm = T)
hist(d$RANDZ)
plot(EXTAR ~ RANDZ, data = d)
plot(EXTRA ~ RANDZ, data = d)
abline(lm(EXTRA ~ RANDZ, data = d))
summary(lm(EXTRA ~ RANDZ, data = d))
hist(r$WDuratDays)
hist(r$TotalBDeaths)
hist(r$TotalBDeaths, breaks = 20)
hist(r$TotalBDeaths, breaks = 40)
hist(r$TotalBDeaths, breaks = 60)
hist(r$TotalBDeaths, breaks = 60, xlim = c(0,40000))
hist(r$TotalBDeaths, breaks = 100, xlim = c(0,40000))
hist(r$TotalBDeaths, breaks = 200, xlim = c(0,40000))
hist(r$TotalBDeaths, breaks = 400, xlim = c(0,50000))
nrow(r)
hist(r$WDuratDays)
names(r)
## Q. What percentage of scores are actually below this score in the distribution?
?ecdf()
